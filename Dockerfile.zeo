# syntax=docker/dockerfile:1.3
# Add supervisor/cron/logrotate support
ARG \
    ZEO_BASE_IMAGE="plone/plone-zeo:latest" \
    APP_TYPE="plone" \
    BASE_DIR="/app" \
    DEBIAN_FRONTEND=noninteractive \
    HELPERS="corpusops/debian-bare:11" \
    PATH="/cops_helpers:$PATH" \
    PYTHONUNBUFFERED=1 \
    TZ="Europe/Paris" \
    STRIP_HELPERS="forego confd remco"Â 
FROM $HELPERS AS helpers
FROM $ZEO_BASE_IMAGE AS base
USER root
# inherit all global args (think to sync this block with runner stage)
ARG BASE_DIR PYTHONUNBUFFERED BASE HELPERS STRIP_HELPERS TZ APP_TYPE PATH="/cops_helpers:$PATH"
ENV \
    BASE_DIR="$BASE_DIR" \
    ZEO_BASE_IMAGE="$ZEO_BASE_IMAGE" \
    TZ="$TZ" \
    APP_TYPE="$APP_TYPE" \
    PYTHONUNBUFFERED="$PYTHONUNBUFFERED" \
    PATH="$PATH" \
    BASE="$BASE" \
    HELPERS="$HELPERS" \
    STRIP_HELPERS="$STRIP_HELPERS"
RUN \
    --mount=type=bind,from=helpers,target=/s \
    --mount=type=cache,id=cops${BASE}apt,target=/var/cache/apt \
    --mount=type=cache,id=cops${BASE}list,target=/var/lib/apt/lists \
    bash -c 'set -exo pipefail \
    && rm -f /etc/apt/apt.conf.d/docker-clean || true;echo "Binary::apt::APT::Keep-Downloaded-Packages \"true\";" > /etc/apt/apt.conf.d/keep-cache \
    && apt-get update && apt-get install --no-install-recommends -y logrotate cron rsync rsyslog procps \
    && for i in /cops_helpers/ /etc/supervisor.d/ /etc/rsyslog.d/ /etc/rsyslog.conf /etc/rsyslog.conf.frep /etc/cron.d/ /etc/logrotate.d/;do \
        if [ -e /s$i ] || [ -h /s$i ];then rsync -aAH --numeric-ids /s${i} ${i};fi\
        && cd /cops_helpers && rm -rfv $STRIP_HELPERS;\
    done \
    \
    && : "$(date): setup project timezone"\
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    && : "$(date) end"'
FROM base AS final
ADD --chown=${APP_TYPE}:${APP_TYPE} sys                               $BASE_DIR/sys
ADD --chown=${APP_TYPE}:${APP_TYPE} local/${APP_TYPE}-deploy-common/  $BASE_DIR/local/${APP_TYPE}-deploy-common/
RUN bash -c 'set -exo pipefail \
    && : "create layout" \
    && mkdir -vp sys init local/${APP_TYPE}-deploy-common/sys \
    && : "assemble init" \
    && for i in zeo-init.sh etc sbin scripts;do for j in local/${APP_TYPE}-deploy-common/sys sys;do if [ -e $j/$i ];then cp -frv $j/$i init;fi;done;done \
    \
    && : "connect zeo-init.sh & cfgs" \
    && ln -sf $(pwd)/init/zeo-init.sh /zeo-init.sh \
    \
    && : "$(date) end"'
ADD --chown=${APP_TYPE}:${APP_TYPE} .git                         $BASE_DIR/.git
CMD "/zeo-init.sh"

FROM base AS runner
# inherit all global args (think to sync this block with runner stage)
ARG BASE_DIR PYTHONUNBUFFERED BASE HELPERS STRIP_HELPERS TZ APP_TYPE PATH="/cops_helpers:$PATH"
ENV \
    BASE_DIR="$BASE_DIR" \
    TZ="$TZ" \
    APP_TYPE="$APP_TYPE" \
    PYTHONUNBUFFERED="$PYTHONUNBUFFERED" \
    PATH="$PATH" \
    BASE="$BASE" \
    HELPERS="$HELPERS" \
    STRIP_HELPERS="$STRIP_HELPERS"
RUN --mount=type=bind,from=final,target=/s \
    for i in /zeo-init.sh /home/ $BASE_DIR/ /app/init/ \
             /cops_helpers/ /etc/supervisor.d/ /etc/rsyslog.d/ /etc/rsyslog.conf /etc/rsyslog.conf.frep /etc/cron.d/ /etc/logrotate.d/ \
    ;do if [ -e /s${i} ] || [ -h /s${i} ];then rsync -aAH --numeric-ids /s${i} ${i};fi;done
ADD --chown=${APP_TYPE}:${APP_TYPE} .git                         $BASE_DIR/.git
# image will drop privileges itself using gosu at the end of the entrypoint
CMD "/zeo-init.sh"
